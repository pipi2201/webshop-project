{
  "version": 3,
  "sources": ["../../vuetify/src/components/VRadioGroup/VRadioGroup.tsx"],
  "sourcesContent": ["// Styles\nimport './VRadioGroup.sass'\n\n// Components\nimport { filterControlProps } from '@/components/VSelectionControl/VSelectionControl'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { makeSelectionControlGroupProps, VSelectionControlGroup } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\nimport { VLabel } from '@/components/VLabel'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { filterInputAttrs, genericComponent, getUid, omit, useRender } from '@/util'\n\n// Types\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\n\nexport type VRadioGroupSlots = VInputSlots & VSelectionControlSlots\n\nexport const VRadioGroup = genericComponent<VRadioGroupSlots>()({\n  name: 'VRadioGroup',\n\n  inheritAttrs: false,\n\n  props: {\n    height: {\n      type: [Number, String],\n      default: 'auto',\n    },\n\n    ...makeVInputProps(),\n    ...omit(makeSelectionControlGroupProps(), ['multiple']),\n\n    trueIcon: {\n      type: IconValue,\n      default: '$radioOn',\n    },\n    falseIcon: {\n      type: IconValue,\n      default: '$radioOff',\n    },\n    type: {\n      type: String,\n      default: 'radio',\n    },\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const uid = getUid()\n    const id = computed(() => props.id || `radio-group-${uid}`)\n    const model = useProxiedModel(props, 'modelValue')\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = filterInputProps(props)\n      const [controlProps, _2] = filterControlProps({\n        ...props,\n        multiple: false as const,\n      })\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n\n      return (\n        <VInput\n          class=\"v-radio-group\"\n          { ...inputAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ id.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n            }) => (\n              <>\n                { label && (\n                  <VLabel id={ id.value }>\n                    { label }\n                  </VLabel>\n                )}\n\n                <VSelectionControlGroup\n                  { ...controlProps }\n                  id={ id.value }\n                  aria-describedby={ messagesId.value }\n                  defaultsTarget=\"VRadio\"\n                  trueIcon={ props.trueIcon }\n                  falseIcon={ props.falseIcon }\n                  type={ props.type }\n                  disabled={ isDisabled.value }\n                  readonly={ isReadonly.value }\n                  aria-labelledby={ label ? id.value : undefined }\n                  { ...controlAttrs }\n                  v-model={ model.value }\n                  v-slots={ slots }\n                />\n              </>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRadioGroup = InstanceType<typeof VRadioGroup>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAsBO,IAAMA,cAAcC,iBAAgB,EAAqB;EAC9DC,MAAM;EAENC,cAAc;EAEdC,OAAO;IACLC,QAAQ;MACNC,MAAM,CAACC,QAAQC,MAAM;MACrBC,SAAS;IACX;IAEA,GAAGC,gBAAe;IAClB,GAAGC,KAAKC,+BAA8B,GAAI,CAAC,UAAU,CAAC;IAEtDC,UAAU;MACRP,MAAMQ;MACNL,SAAS;IACX;IACAM,WAAW;MACTT,MAAMQ;MACNL,SAAS;IACX;IACAH,MAAM;MACJA,MAAME;MACNC,SAAS;IACX;EACF;EAEAO,OAAO;IACL,qBAAsBC,SAAa;EACrC;EAEAC,MAAOd,OAAK,MAAoB;AAAA,QAAlB;MAAEe;MAAOC;IAAM,IAAC;AAC5B,UAAMC,MAAMC,OAAM;AAClB,UAAMC,KAAKC,SAAS,MAAMpB,MAAMmB,MAAO,eAAcF,KAAK;AAC1D,UAAMI,QAAQC,gBAAgBtB,OAAO,YAAY;AAEjDuB,cAAU,MAAM;AACd,YAAM,CAACC,YAAYC,YAAY,IAAIC,iBAAiBX,KAAK;AACzD,YAAM,CAACY,YAAYC,EAAE,IAAIC,iBAAiB7B,KAAK;AAC/C,YAAM,CAAC8B,cAAcC,EAAE,IAAIC,mBAAmB;QAC5C,GAAGhC;QACHiC,UAAU;MACZ,CAAC;AACD,YAAMC,QAAQlB,MAAMkB,QAChBlB,MAAMkB,MAAM;QACZA,OAAOlC,MAAMkC;QACblC,OAAO;UAAEmC,KAAKhB,GAAGiB;QAAM;MACzB,CAAC,IACCpC,MAAMkC;AAEV,aAAA,YAAA,QAAA,WAAA;QAAA,SAEU;MAAe,GAChBV,YACAG,YAAU;QAAA,cACLN,MAAMe;QAAK,uBAAA,YAAXf,MAAMe,QAAK;QAAA,MAChBjB,GAAGiB;MAAK,CAAA,GAAA;QAGX,GAAGpB;QACHX,SAAS,WAAA;AAAA,cAAC;YACRc,IAAAA;YACAkB;YACAC;YACAC;UACF,IAAC;AAAA,iBAAA,YAAA,UAAA,MAAA,CAEKL,SAAK,YAAA,QAAA;YAAA,MACQf,IAAGiB;UAAK,GAAA;YAAA,SAAA,MAAA,CACjBF,KAAK;UAAA,CAAA,GAEV,YAAA,wBAAA,WAGMJ,cAAY;YAAA,MACZX,IAAGiB;YAAK,oBACMC,WAAWD;YAAK,kBACpB;YAAQ,YACZpC,MAAMS;YAAQ,aACbT,MAAMW;YAAS,QACpBX,MAAME;YAAI,YACNoC,WAAWF;YAAK,YAChBG,WAAWH;YAAK,mBACTF,QAAQf,IAAGiB,QAAQI;UAAS,GACzCf,cAAY;YAAA,cACPJ,MAAMe;YAAK,uBAAA,YAAXf,MAAMe,QAAK;UAAA,CAAA,GACXpB,KAAK,CAAA,CAAA;QAAA;MAGpB,CAAA;IAIT,CAAC;AAED,WAAO,CAAC;EACV;AACF,CAAC;",
  "names": ["VRadioGroup", "genericComponent", "name", "inheritAttrs", "props", "height", "type", "Number", "String", "default", "makeVInputProps", "omit", "makeSelectionControlGroupProps", "trueIcon", "IconValue", "falseIcon", "emits", "val", "setup", "attrs", "slots", "uid", "getUid", "id", "computed", "model", "useProxiedModel", "useRender", "inputAttrs", "controlAttrs", "filterInputAttrs", "inputProps", "_1", "filterInputProps", "controlProps", "_2", "filterControlProps", "multiple", "label", "for", "value", "messagesId", "isDisabled", "isReadonly", "undefined"]
}
