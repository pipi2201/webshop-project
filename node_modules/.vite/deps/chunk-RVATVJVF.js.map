{
  "version": 3,
  "sources": ["../../vuetify/src/composables/intersectionObserver.ts"],
  "sourcesContent": ["// Utilities\nimport { onBeforeUnmount, ref, watch } from 'vue'\nimport { SUPPORTS_INTERSECTION } from '@/util'\n\nexport function useIntersectionObserver (callback?: IntersectionObserverCallback) {\n  const intersectionRef = ref<HTMLElement>()\n  const isIntersecting = ref(false)\n\n  if (SUPPORTS_INTERSECTION) {\n    const observer = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {\n      callback?.(entries, observer)\n\n      isIntersecting.value = !!entries.find(entry => entry.isIntersecting)\n    })\n\n    onBeforeUnmount(() => {\n      observer.disconnect()\n    })\n\n    watch(intersectionRef, (newValue, oldValue) => {\n      if (oldValue) {\n        observer.unobserve(oldValue)\n        isIntersecting.value = false\n      }\n\n      if (newValue) observer.observe(newValue)\n    }, {\n      flush: 'post',\n    })\n  }\n\n  return { intersectionRef, isIntersecting }\n}\n"],
  "mappings": ";;;;;;;;;;AAIO,SAASA,wBAAyBC,UAAyC;AAChF,QAAMC,kBAAkBC,IAAG;AAC3B,QAAMC,iBAAiBD,IAAI,KAAK;AAEhC,MAAIE,uBAAuB;AACzB,UAAMC,WAAW,IAAIC,qBAAsBC,aAAyC;AAClFP,2CAAWO,SAASF;AAEpBF,qBAAeK,QAAQ,CAAC,CAACD,QAAQE,KAAKC,WAASA,MAAMP,cAAc;IACrE,CAAC;AAEDQ,oBAAgB,MAAM;AACpBN,eAASO,WAAU;IACrB,CAAC;AAEDC,UAAMZ,iBAAiB,CAACa,UAAUC,aAAa;AAC7C,UAAIA,UAAU;AACZV,iBAASW,UAAUD,QAAQ;AAC3BZ,uBAAeK,QAAQ;MACzB;AAEA,UAAIM;AAAUT,iBAASY,QAAQH,QAAQ;IACzC,GAAG;MACDI,OAAO;IACT,CAAC;EACH;AAEA,SAAO;IAAEjB;IAAiBE;EAAe;AAC3C;",
  "names": ["useIntersectionObserver", "callback", "intersectionRef", "ref", "isIntersecting", "SUPPORTS_INTERSECTION", "observer", "IntersectionObserver", "entries", "value", "find", "entry", "onBeforeUnmount", "disconnect", "watch", "newValue", "oldValue", "unobserve", "observe", "flush"]
}
